{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/getFilteredTodos.tsx","contexts/TodoContext.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onTodoSelect","className","map","todo","id","title","completed","cn","type","onClick","handleClick","TodoFilter","setFilter","useState","query","setQuery","onChange","e","prev","status","target","value","placeholder","inputQuery","toLowerCase","trim","style","cursor","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","onResetTodo","loading","setLoading","selectedUser","setSelectedUser","useEffect","userId","finally","href","email","name","App","setTodos","setSelectedTodo","filter","filteredTodos","filteredByTitle","includes","getFilteredTodos","initialSelect","isSelected","TodoContext","React","createContext","_newTodo","TodoProvider","children","useMemo","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ee245cc.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId?: number;\n  onTodoSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onTodoSelect,\n}) => {\n  const handleClick = (todo: Todo) => {\n    onTodoSelect(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={cn('far', {\n                        'fa-eye': selectedTodoId !== id,\n                        'fa-eye-slash': selectedTodoId === id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport { Filter } from '../../types/Filter';\n\ninterface Props {\n  setFilter: React.Dispatch<React.SetStateAction<Filter>>;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ setFilter }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSelectChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setFilter(prev => ({ ...prev, status: e.target.value }));\n  };\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const inputQuery = e.target.value.toLowerCase().trim();\n\n    setQuery(e.target.value);\n    setFilter(prev => ({ ...prev, title: inputQuery }));\n  };\n\n  const handleClick = () => {\n    setQuery('');\n    setFilter(prev => ({ ...prev, title: '' }));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ cursor: 'pointer' }}>\n          {!!query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClick}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  onResetTodo: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onResetTodo }) => {\n  const [loading, setLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const { id, title, completed } = selectedTodo;\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setSelectedUser)\n      .finally(() => setLoading(false));\n  }, [selectedTodo?.userId]);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onResetTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { getFilteredTodos } from './utils/getFilteredTodos';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>({ status: 'all', title: '' });\n\n  const filteredTodos = getFilteredTodos(todos, filter);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const resetTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setFilter={setFilter} />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : (\n                <TodoList todos={filteredTodos} selectedTodoId={selectedTodo?.id} onTodoSelect={handleTodoSelect} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {!!selectedTodo && <TodoModal selectedTodo={selectedTodo} onResetTodo={resetTodo} />}\n    </>\n  );\n};\n","import { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport function getFilteredTodos(todos: Todo[], filter: Filter) {\n  const { status, title } = filter;\n  const filteredByTitle = todos\n    .filter(todo => todo.title.toLowerCase().includes(title));\n\n  switch (status) {\n    case 'active':\n      return filteredByTitle.filter(({ completed }) => !completed);\n    case 'completed':\n      return filteredByTitle.filter(({ completed }) => completed);\n    default:\n      return filteredByTitle;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useMemo, useState } from 'react';\nimport { SelectedTodo } from '../types/SelectedTodo';\nimport { Todo } from '../types/Todo';\n\nconst initialSelect: SelectedTodo = {\n  todo: {} as Todo,\n  isSelected: false,\n};\n\nexport const TodoContext = React.createContext({\n  selectedTodo: {} as SelectedTodo,\n  setSelectedTodo: (_newTodo: SelectedTodo) => {},\n});\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [selectedTodo, setSelectedTodo] = useState(initialSelect);\n\n  const value = useMemo(\n    () => ({\n      selectedTodo,\n      setSelectedTodo,\n    }),\n    [selectedTodo],\n  );\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './contexts/TodoContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}