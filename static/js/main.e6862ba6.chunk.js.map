{"version":3,"sources":["contexts/TodoContext.tsx","components/TodoCard/TodoCard.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Status.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["initialSelect","todo","isSelected","TodoContext","React","createContext","selectedTodo","setSelectedTodo","_newTodo","TodoProvider","children","useState","value","useMemo","Provider","TodoCard","useContext","id","completed","title","className","cn","type","onClick","TodoList","todosFromServer","map","TodoFilter","query","setQuery","setStatus","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","TodoModal","user","setUser","isLoading","setIsLoading","useEffect","userId","href","email","name","App","setTodosFromServer","status","filteredByQuery","filter","normalizedQuery","trim","toLowerCase","includes","preparedTodos","active","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6862ba6.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useMemo, useState } from 'react';\nimport { SelectedTodo } from '../types/SelectedTodo';\nimport { Todo } from '../types/Todo';\n\nconst initialSelect: SelectedTodo = {\n  todo: {} as Todo,\n  isSelected: false,\n};\n\nexport const TodoContext = React.createContext({\n  selectedTodo: {} as SelectedTodo,\n  setSelectedTodo: (_newTodo: SelectedTodo) => {},\n});\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [selectedTodo, setSelectedTodo] = useState(initialSelect);\n\n  const value = useMemo(\n    () => ({\n      selectedTodo,\n      setSelectedTodo,\n    }),\n    [selectedTodo],\n  );\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../../contexts/TodoContext';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoCard: React.FC<Props> = ({ todo }) => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodoContext);\n\n  const { id, completed, title } = todo;\n  const { isSelected } = selectedTodo;\n\n  const selectedTodoHandler = () => {\n    setSelectedTodo({\n      todo,\n      isSelected: true,\n    });\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': isSelected })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={selectedTodoHandler}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye': !isSelected,\n                'fa-eye-slash': isSelected,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoCard } from '../TodoCard/TodoCard';\n\ninterface Props {\n  todosFromServer: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todosFromServer }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todosFromServer.map(todo => (\n          <TodoCard\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  setQuery: (query: string) => void;\n  setStatus: (event: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setStatus,\n}) => {\n  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(event.target.value);\n  };\n\n  const queryHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const deleteHandler = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={selectHandler}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={queryHandler}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={deleteHandler}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { TodoContext } from '../../contexts/TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { selectedTodo, setSelectedTodo } = useContext(TodoContext);\n\n  const { todo } = selectedTodo;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n\n    getUser(todo.userId).then(setUser);\n  },\n  [todo.userId]);\n\n  const deleteHandler = () => {\n    setSelectedTodo({\n      todo,\n      isSelected: false,\n    });\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={deleteHandler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useContext, useEffect, useMemo, useState,\n}\n  from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Status } from './types/Status';\nimport { TodoContext } from './contexts/TodoContext';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const { selectedTodo } = useContext(TodoContext);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n\n    getTodos().then(setTodosFromServer);\n  }, []);\n\n  const filteredByQuery = useMemo(\n    () => todosFromServer.filter((todo) => {\n      const normalizedQuery = query.trim().toLowerCase();\n\n      return todo.title.toLowerCase().includes(normalizedQuery);\n    }),\n    [query, todosFromServer],\n  );\n\n  const preparedTodos = useMemo(\n    () => filteredByQuery.filter((todo) => {\n      switch (status) {\n        case Status.active:\n          return !todo.completed;\n        case Status.completed:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    }),\n    [status, filteredByQuery],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <h1 className=\"title\">Todos:</h1>\n\n        <div className=\"block\">\n          <TodoFilter\n            query={query}\n            setQuery={setQuery}\n            setStatus={setStatus}\n          />\n        </div>\n\n        <div className=\"block\">\n          {isLoading && <Loader />}\n          <TodoList todosFromServer={preparedTodos} />\n        </div>\n      </div>\n\n      {selectedTodo.isSelected && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './contexts/TodoContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}